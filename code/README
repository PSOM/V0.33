
V0.33 - 2012/04/17. JBG.

- The structure has been created in that way: code/{exe,mkfile,{model,model_build}/{src,inc}} .
- genmakefilel and compile_complex.sh have been written and tested in several configurations, but needs some additional tests.
- 20120227: psom (versionfrom JBW) has been fitted into the abovementioned structure.
- 20120302: the code has been modified to meet the fortran 2003 standard:
               * Most importantly, the declaration has been changed into the new standard. REAL*8 becomes REAL(kind=...), the old 'CHARACTER*' type is removed.
               * ENDDOs have been added to get rid of multiple ENNDDOs.
               * Some variables were not declared the right way.
               * dtime is now used in a much clearer way: dtime when global, dtimel when local.
               * NAMELIST has been moved to meet the standard
    -> With -real size 64: No difference at all.
    -> Without -real size 64, the results are identical at 1e-7.
    The -real size 64 is not necessary anymore to get realistic features.
    
- 20120305: dabs, dsqrt, dexp (old versions of abs, sqrt, exp for kind=2 (!)) have been removed from the code.
    No impact on the output.

- 20120323 and 28: Improved portability for netcdf subroutines.
 Should work with netcdf4.

- 201203028: Made the particles calculation optional. 

- 20120402: Enabled to choose pgf95.

- 20120417: Several small modifications:
               * cleaned the declarations
               * main has been slightly reorganized
	       * enabled to use the model without netcdf (see below)
               * enabled to choose the output format: netcdf or binary. First step toward a much better way to get output...
               * slight changes in tools/compile_complex.sh


- a lot to do:
   - work on the boundary conditions.
   - improve the calculation of rp with topogaphy.
   - improve the portability.
   - add comments.
   - improve the user-friendliness.

Additional interesting readings:
  * src/README : all about the modifications of psom itself.
  * the scripts in tools are commented (or will soon be).
  * optfile is also roughly commented.
***********************************************************************************

Here is the directory where the code is hosted and from where the model can be ran.

A. To get started: only 4 steps are necessary to start running psom.

------
step 1: Please edit the ./optfile to set the options that fit your environment. Be careful with the syntax ! 

------
step 2: When this file is correctly set, you can type this command:

   ##############################
   #  sh tools/compile_complex.sh
   ##############################
  It will create the makefile in ./mkfile.
  
------
step 3: Please edit the ./namelist file.

------
step 4: When this file is correctly set, you can type this command:
   ##############################
   # ./exe/nh < ./namelist
   ##############################
  It will start and run the model.
  By default, the output will appear on the screen and the output files will go to ../output/.



B. Further use:

* Not using netcdf:
  By default, both binary and netcdf outputs are created. If you wish not to use netcdf and do not want to install netcdf libraries, follow these steps previously to the 4 steps process described above:

   - edit ./optfile and set define_netcdf to "F" : 
      define_netcdf=T           by default
      define_netcdf=F           if you do not want using netcdf.


   - edit ./model/inc/cppdef and undefine output_netcdf :
      #define file_output_cdf   by default
      #undef file_output_cdf    if you do not want to use netcdf.

   That should be it !


* Use of model_build:
  If nothing is put in model_build, then the compilation is a classical one. BUT, this directory comes with a structure (model / model_build) that may make the development easier. You can use it this way:
    Instead of replacing files in ./model, you can copy (from ./model and then make modifications or from your own versions) .f90 files in ./model_build.
    When using tools/compile_complex.sh, these new files will overtake those from ./model. The executable will be created based on a combination of old and new .f90 files.   
  If you do not want to use that possibility, you still can use tools/compile_complex.sh, which will then be equivalent to :
    ##############################
    # sh tools/genmakefilel
    # sh tools/compile_simple.sh
    ##############################


C. Additional indications:

* To clean up a bit the mkfile directory, you can type:
   ##############################
   # make -Cmkfile/ clean 
   ##############################
   Use cleanmore instead of clean to also remove the executable file. 



